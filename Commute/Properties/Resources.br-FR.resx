<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Amazon picture HTTP" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Application name" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Cancel" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Create account" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Dir image upload" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Email" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Error database access" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Error duplicate account" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Error invalid mail" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Error string too long" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Error unknown account" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Error wrong password" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Forum" xml:space="preserve"> <value>xxx</value> </data>
  <data name="From" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Guest" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Hello" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Help" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Location create" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Location name" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Location update" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Location type" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Login" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Logout" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Mandatory" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Map" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Menu" xml:space="preserve"> <value>xxx</value> </data>
  <data name="My name" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Msg confirm mail sending" xml:space="preserve"> <value>xxx</value> </data>
  <data name="No record" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Offer" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Ok" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Password" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Password confirm" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Picture" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Register" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Route" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Route create" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Route create update" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Route id" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Route new" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Route list" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Route search" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Route view" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Save" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Search" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Seek" xml:space="preserve"> <value>xxx</value> </data>
  <data name="To" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Update" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Update account" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Update data" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Update picture" xml:space="preserve"> <value>xxx</value> </data>
  <data name="User" xml:space="preserve"> <value>xxx</value> </data>
  <data name="User account" xml:space="preserve"> <value>xxx</value> </data>
  <data name="User login" xml:space="preserve"> <value>xxx</value> </data>
  <data name="User logout" xml:space="preserve"> <value>xxx</value> </data>
  <data name="User registration" xml:space="preserve"> <value>xxx</value> </data>
  <data name="User set location" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Mail contact title" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Mail contact msg" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Mail contact reply" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Mail contact map" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Mail contact map title" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome account" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome help" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome join" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome mail" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome message" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome registred" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome route" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome set location" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Welcome view route" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Wtitle confirmation" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Metadesc default" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Metadesc home welcome" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Metadesc user setlocation" xml:space="preserve"> <value>xxx</value> </data>
  <data name="Metadesc route list" xml:space="preserve"> <value>xxx</value> </data>
</root>
